// @generated by the capnpc-dart plugin to the Cap'n Proto schema compiler.
// DO NOT EDIT.
// source: example/pubsub.capnp

// ignore: unused_import
import 'package:capnp/capnp.dart' as capnp;
// ignore: unused_import
import 'package:capnp/rpc/capnp_rpc.dart' as capnp_rpc;
import 'dart:core' as core;
// ignore: unused_import
import 'dart:async' as async;

// ignore: unused_import
import 'pubsub_subscription_capnp.dart' as pubsub_capnp_subscription_;
// ignore: unused_import
import 'pubsub_publisher_capnp.dart' as pubsub_capnp_publisher_;
// ignore: unused_import
import 'pubsub_subscriber_capnp.dart' as pubsub_capnp_subscriber_;
// ignore: unused_import
import 'pubsub_capnp.dart' as pubsub_capnp_;


class PushMessageParams {
  capnp.StructFactory<PushMessageParamsReader> reader = PushMessageParamsReader.from;
  capnp.StructBuilderFactory<PushMessageParamsBuilder> builder = PushMessageParamsBuilder.build;
  core.int ID = 0x83df3dcb9b67c816;
}

class PushMessageParamsReader {
  final capnp.SegmentView segmentView;
  final core.int dataSectionLengthInWords;
  const PushMessageParamsReader(this.segmentView, this.dataSectionLengthInWords);
  static PushMessageParamsReader from(
    capnp.SegmentView segmentView,
    core.int dataSectionLengthInWords,
  ) =>
      PushMessageParamsReader(segmentView, dataSectionLengthInWords);

  core.String get message => segmentView.getText(dataSectionLengthInWords + 0);
}

class PushMessageParamsBuilder {
  final capnp.SegmentView segmentView;
  final core.int dataSectionLengthInWords = 0;
  const PushMessageParamsBuilder(this.segmentView);
  static capnp.BuilderReturn<PushMessageParamsBuilder> build() {
    return capnp.BuilderReturn(capnp.Layout(0, 1), (root) => PushMessageParamsBuilder(root));
  }

  PushMessageParamsReader get reader => PushMessageParamsReader(segmentView, dataSectionLengthInWords);

  set message (core.String value) => segmentView.setText(dataSectionLengthInWords + 0, value);
}

class PushMessageResults {
  capnp.StructFactory<PushMessageResultsReader> reader = PushMessageResultsReader.from;
  capnp.StructBuilderFactory<PushMessageResultsBuilder> builder = PushMessageResultsBuilder.build;
  core.int ID = 0xf38df93df7aed6cd;
}

class PushMessageResultsReader {
  final capnp.SegmentView segmentView;
  final core.int dataSectionLengthInWords;
  const PushMessageResultsReader(this.segmentView, this.dataSectionLengthInWords);
  static PushMessageResultsReader from(
    capnp.SegmentView segmentView,
    core.int dataSectionLengthInWords,
  ) =>
      PushMessageResultsReader(segmentView, dataSectionLengthInWords);

}

class PushMessageResultsBuilder {
  final capnp.SegmentView segmentView;
  final core.int dataSectionLengthInWords = 0;
  const PushMessageResultsBuilder(this.segmentView);
  static capnp.BuilderReturn<PushMessageResultsBuilder> build() {
    return capnp.BuilderReturn(capnp.Layout(0, 0), (root) => PushMessageResultsBuilder(root));
  }

  PushMessageResultsReader get reader => PushMessageResultsReader(segmentView, dataSectionLengthInWords);

}
class SubscriberClient {
  capnp_rpc.RawClient innerClient;

  SubscriberClient(this.innerClient);
  static SubscriberClient fromRaw(capnp_rpc.RawClient client) => SubscriberClient(client);

  capnp_rpc.Request<PushMessageParamsBuilder,PushMessageResultsReader> get pushMessageRequest =>
    capnp_rpc.Request.fromRaw(innerClient, 0x9674b39e6545fa90, 0, PushMessageParamsBuilder.build, PushMessageResultsReader.from);

}

class SubscriberServer  extends capnp_rpc.ServerDispatch {
  @core.override
  async.FutureOr<capnp_rpc.Status> dispatch(core.int interfaceId, core.int methodId, capnp.StructPointer params, capnp_rpc.PayloadBuilder results) {
    switch(interfaceId) {
      case 0x9674b39e6545fa90:
        switch(methodId) {
          case 0:
            return pushMessage(params.load(PushMessageParamsReader.from), results.initContent.initStruct(PushMessageResultsBuilder.build));
        }
    }
    return capnp_rpc.Status.unimplemented("Method not implemented.");
  }

  async.FutureOr<capnp_rpc.Status> pushMessage(PushMessageParamsReader params, PushMessageResultsBuilder results) =>
    capnp_rpc.Status.unimplemented("Method not Implemented");

}


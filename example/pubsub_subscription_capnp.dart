// @generated by the capnpc-dart plugin to the Cap'n Proto schema compiler.
// DO NOT EDIT.
// source: example/pubsub.capnp

// ignore: unused_import
import 'package:capnp/capnp.dart' as capnp;
// ignore: unused_import
import 'package:capnp/rpc/capnp_rpc.dart' as capnp_rpc;
import 'dart:core' as core;
// ignore: unused_import
import 'dart:async' as async;

// ignore: unused_import
import 'pubsub_subscription_capnp.dart' as pubsub_capnp_subscription_;
// ignore: unused_import
import 'pubsub_publisher_capnp.dart' as pubsub_capnp_publisher_;
// ignore: unused_import
import 'pubsub_subscriber_capnp.dart' as pubsub_capnp_subscriber_;
// ignore: unused_import
import 'pubsub_capnp.dart' as pubsub_capnp_;

class SubscriptionClient {
  capnp_rpc.RawClient innerClient;

  SubscriptionClient(this.innerClient);
  static SubscriptionClient fromRaw(capnp_rpc.RawClient client) => SubscriptionClient(client);

}

class SubscriptionServer  extends capnp_rpc.ServerDispatch {
  @core.override
  async.FutureOr<capnp_rpc.Status> dispatch(core.int interfaceId, core.int methodId, capnp.StructPointer params, capnp_rpc.PayloadBuilder results) {
    switch(interfaceId) {
      case 0xdf06b521cfa266f7:
        switch(methodId) {
        }
    }
    return capnp_rpc.Status.unimplemented("Method not implemented.");
  }

}


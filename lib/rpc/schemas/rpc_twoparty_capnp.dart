// @generated by the capnpc-dart plugin to the Cap'n Proto schema compiler.
// DO NOT EDIT.
// source: lib/rpc/schemas/rpc-twoparty.capnp

// ignore: unused_import
import 'package:capnp/capnp.dart' as capnp;
import 'dart:core' as core;



enum Side {
  Server,
  Client,
}

extension SideTypeID on Side {
  static const core.int ID = 0x9fd69ebc87b9719c;
}

class VatId {
  capnp.StructFactory<VatIdReader> reader = VatIdReader.from;
  capnp.StructBuilderFactory<VatIdBuilder> builder = VatIdBuilder.build;
  core.int ID = 0xd20b909fee733a8e;
}

class VatIdReader {
  final capnp.SegmentView segmentView;
  final core.int dataSectionLengthInWords;
  const VatIdReader(this.segmentView, this.dataSectionLengthInWords);
  static VatIdReader from(
    capnp.SegmentView segmentView,
    core.int dataSectionLengthInWords,
  ) =>
      VatIdReader(segmentView, dataSectionLengthInWords);

  Side get side => segmentView.getEnum(0, Side.values);
}

class VatIdBuilder {
  final capnp.SegmentView segmentView;
  final core.int dataSectionLengthInWords = 1;
  const VatIdBuilder(this.segmentView);
  static capnp.BuilderReturn<VatIdBuilder> build() {
    return capnp.BuilderReturn(capnp.Layout(1, 0), (root) => VatIdBuilder(root));
  }

  VatIdReader get reader => VatIdReader(segmentView, dataSectionLengthInWords);

  set side (Side value) => segmentView.setUInt16(0, value.index);
}

class ProvisionId {
  capnp.StructFactory<ProvisionIdReader> reader = ProvisionIdReader.from;
  capnp.StructBuilderFactory<ProvisionIdBuilder> builder = ProvisionIdBuilder.build;
  core.int ID = 0xb88d09a9c5f39817;
}

class ProvisionIdReader {
  final capnp.SegmentView segmentView;
  final core.int dataSectionLengthInWords;
  const ProvisionIdReader(this.segmentView, this.dataSectionLengthInWords);
  static ProvisionIdReader from(
    capnp.SegmentView segmentView,
    core.int dataSectionLengthInWords,
  ) =>
      ProvisionIdReader(segmentView, dataSectionLengthInWords);

  core.int get joinId => segmentView.getUInt32(0);
}

class ProvisionIdBuilder {
  final capnp.SegmentView segmentView;
  final core.int dataSectionLengthInWords = 1;
  const ProvisionIdBuilder(this.segmentView);
  static capnp.BuilderReturn<ProvisionIdBuilder> build() {
    return capnp.BuilderReturn(capnp.Layout(1, 0), (root) => ProvisionIdBuilder(root));
  }

  ProvisionIdReader get reader => ProvisionIdReader(segmentView, dataSectionLengthInWords);

  set joinId (core.int value) => segmentView.setUInt32(0, value);
}

class RecipientId {
  capnp.StructFactory<RecipientIdReader> reader = RecipientIdReader.from;
  capnp.StructBuilderFactory<RecipientIdBuilder> builder = RecipientIdBuilder.build;
  core.int ID = 0x89f389b6fd4082c1;
}

class RecipientIdReader {
  final capnp.SegmentView segmentView;
  final core.int dataSectionLengthInWords;
  const RecipientIdReader(this.segmentView, this.dataSectionLengthInWords);
  static RecipientIdReader from(
    capnp.SegmentView segmentView,
    core.int dataSectionLengthInWords,
  ) =>
      RecipientIdReader(segmentView, dataSectionLengthInWords);

}

class RecipientIdBuilder {
  final capnp.SegmentView segmentView;
  final core.int dataSectionLengthInWords = 0;
  const RecipientIdBuilder(this.segmentView);
  static capnp.BuilderReturn<RecipientIdBuilder> build() {
    return capnp.BuilderReturn(capnp.Layout(0, 0), (root) => RecipientIdBuilder(root));
  }

  RecipientIdReader get reader => RecipientIdReader(segmentView, dataSectionLengthInWords);

}

class ThirdPartyCapId {
  capnp.StructFactory<ThirdPartyCapIdReader> reader = ThirdPartyCapIdReader.from;
  capnp.StructBuilderFactory<ThirdPartyCapIdBuilder> builder = ThirdPartyCapIdBuilder.build;
  core.int ID = 0xb47f4979672cb59d;
}

class ThirdPartyCapIdReader {
  final capnp.SegmentView segmentView;
  final core.int dataSectionLengthInWords;
  const ThirdPartyCapIdReader(this.segmentView, this.dataSectionLengthInWords);
  static ThirdPartyCapIdReader from(
    capnp.SegmentView segmentView,
    core.int dataSectionLengthInWords,
  ) =>
      ThirdPartyCapIdReader(segmentView, dataSectionLengthInWords);

}

class ThirdPartyCapIdBuilder {
  final capnp.SegmentView segmentView;
  final core.int dataSectionLengthInWords = 0;
  const ThirdPartyCapIdBuilder(this.segmentView);
  static capnp.BuilderReturn<ThirdPartyCapIdBuilder> build() {
    return capnp.BuilderReturn(capnp.Layout(0, 0), (root) => ThirdPartyCapIdBuilder(root));
  }

  ThirdPartyCapIdReader get reader => ThirdPartyCapIdReader(segmentView, dataSectionLengthInWords);

}

class JoinKeyPart {
  capnp.StructFactory<JoinKeyPartReader> reader = JoinKeyPartReader.from;
  capnp.StructBuilderFactory<JoinKeyPartBuilder> builder = JoinKeyPartBuilder.build;
  core.int ID = 0x95b29059097fca83;
}

class JoinKeyPartReader {
  final capnp.SegmentView segmentView;
  final core.int dataSectionLengthInWords;
  const JoinKeyPartReader(this.segmentView, this.dataSectionLengthInWords);
  static JoinKeyPartReader from(
    capnp.SegmentView segmentView,
    core.int dataSectionLengthInWords,
  ) =>
      JoinKeyPartReader(segmentView, dataSectionLengthInWords);

  core.int get joinId => segmentView.getUInt32(0);
  core.int get partCount => segmentView.getUInt16(4);
  core.int get partNum => segmentView.getUInt16(6);
}

class JoinKeyPartBuilder {
  final capnp.SegmentView segmentView;
  final core.int dataSectionLengthInWords = 1;
  const JoinKeyPartBuilder(this.segmentView);
  static capnp.BuilderReturn<JoinKeyPartBuilder> build() {
    return capnp.BuilderReturn(capnp.Layout(1, 0), (root) => JoinKeyPartBuilder(root));
  }

  JoinKeyPartReader get reader => JoinKeyPartReader(segmentView, dataSectionLengthInWords);

  set joinId (core.int value) => segmentView.setUInt32(0, value);
  set partCount (core.int value) => segmentView.setUInt16(4, value);
  set partNum (core.int value) => segmentView.setUInt16(6, value);
}

class JoinResult {
  capnp.StructFactory<JoinResultReader> reader = JoinResultReader.from;
  capnp.StructBuilderFactory<JoinResultBuilder> builder = JoinResultBuilder.build;
  core.int ID = 0x9d263a3630b7ebee;
}

class JoinResultReader {
  final capnp.SegmentView segmentView;
  final core.int dataSectionLengthInWords;
  const JoinResultReader(this.segmentView, this.dataSectionLengthInWords);
  static JoinResultReader from(
    capnp.SegmentView segmentView,
    core.int dataSectionLengthInWords,
  ) =>
      JoinResultReader(segmentView, dataSectionLengthInWords);

  core.int get joinId => segmentView.getUInt32(0);
  core.bool get succeeded => segmentView.getBool(32);
  capnp.Pointer get cap => segmentView.getAnyPointer(dataSectionLengthInWords + 0);
}

class JoinResultBuilder {
  final capnp.SegmentView segmentView;
  final core.int dataSectionLengthInWords = 1;
  const JoinResultBuilder(this.segmentView);
  static capnp.BuilderReturn<JoinResultBuilder> build() {
    return capnp.BuilderReturn(capnp.Layout(1, 1), (root) => JoinResultBuilder(root));
  }

  JoinResultReader get reader => JoinResultReader(segmentView, dataSectionLengthInWords);

  set joinId (core.int value) => segmentView.setUInt32(0, value);
  set succeeded (core.bool value) => segmentView.setBool(32, value);
  set cap (capnp.Pointer value) => segmentView.setAnyPointer(dataSectionLengthInWords + 0, value);
}
